package org.leetcode.algos.twopointers;

/**
 * Необходимо разработать алгоритм нахождение
 * наименьшего диапазона с данным количеством различных элементов.
 * У вас есть отсортированный массив целых чисел и число K.
 * Ваша задача - найти наименьший диапазон в массиве,
 * который содержит как минимум K различных элементов.
 * Напримеры: входной массив [1, 2, 3, 4, 5] и k = 3, то наименьший диапазон будет [0, 2], так как он содержит три различных элемента: 1, 2 и 3.
 * входной массив [1, 2, 2, 3, 4, 5] и k = 3, то наименьший диапазон будет [2, 4],
 * так как он содержит три различных элемента: 2, 3 и 4. Диапазон [0, 2] не подходит, так как он содержит дублирующие элементы 1, 2, 2.
 */
public class SmallestRangeFinder {

    public int[] findSmallestRange(int[] nums, int k) {
        int i = 0;
        int j = 0;
        int size = 1;
        while (j < nums.length - 1) {
            if (nums[j] != nums[j + 1]) {
                size++;
            }
            if (size == k) {
                return new int[]{i, j + 1};
            }
            if (nums[j] == nums[j + 1]) {
                i = j + 1;
                size = 1;
            }
            j++;
        }
        return null;
    }
}
